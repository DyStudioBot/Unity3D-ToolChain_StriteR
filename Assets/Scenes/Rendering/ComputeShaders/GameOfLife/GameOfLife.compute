#pragma kernel Reset
#pragma kernel Generation

#include "Assets/Shaders/Library/Common.hlsl"

RWTexture2D<float4> _Result;
RWTexture2D<float4> _PreResult;

float _Threshold;
[numthreads(8,8,1)]
void Reset(uint3 id : SV_DispatchThreadID)
{
    _Result[id.xy] = step(random(id.xy/float2(1920,1080)),_Threshold);
}

float updateCell( int i, int j )
{
    int k =  _PreResult[int2(i-1, j-1)].r + _PreResult[int2(i, j-1)].r + _PreResult[int2(i+1, j-1)].r
           + _PreResult[int2(i-1, j  )].r                              + _PreResult[int2(i+1, j  )].r
           + _PreResult[int2(i-1, j+1)].r + _PreResult[int2(i, j+1)].r + _PreResult[int2(i+1, j+1)].r;

    int e = _PreResult[int2(i,j)].r;
    if( (e==1) && (k==3 || k==2) ) return 1;
    if( (e==0) && (k==3        ) ) return 1;
    return 0;
}

[numthreads(8,8,1)]
void Generation (uint3 id : SV_DispatchThreadID)
{
    _Result[id.xy] =  updateCell(id.x,id.y);
}

